[tool.poetry]
name = "bss-backend"
version = "0.1.0"
description = "Bridge Security Solutions back-end"
authors = ["Bridge Security Solutions <support@bridgesecuritysolutions.com>"]
readme = "README.md"
packages = [
    { include = "auth" },
    { include = "example" },
    { include = "monitoring" },
    { include = "api"}
]

[tool.poetry.dependencies]
python = "^3.12"
numpy = "^2.1.3"
opencv-python = "^4.10.0.84"
pydantic = "^2.10.5"
pydantic-settings = "^2.2.1"
email-validator = "^2.2.0"
fastapi = {extras = ["standard"], version = "^0.115.6"}
pyjwt = {extras = ["crypto"], version = "^2.10.1"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
aiosmtplib = "^3.0.1"
sqlalchemy = "^2.0.37"
asyncpg = "^0.30.0"
alembic = "^1.14.0"
bss-lib = {path = "../bss-lib"}

[tool.poetry.group.dev.dependencies]
pyaml = "^25.1.0"
mypy = "^1.9.0"
pre-commit = "^4.0.1"
types-passlib = "^1.7.7.20240106"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.2"
httpx = "^0.27.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true
strict_equality = true
disallow_untyped_calls = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[[tool.mypy.overrides]]
module = ["database.*", "user.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["example", "auth", "monitoring"]
python_files = ["test_*.py"]
filterwarnings = [
    "ignore::DeprecationWarning:passlib.*:",
]
